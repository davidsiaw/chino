#!/usr/bin/env ruby

require "chino"
require "active_support/all"
require "fileutils"

include Chino

command = ARGV.shift

def config
	if !File.exists? "Chinofile"
		puts "This directory has no Chinofile. Please create one before running chino"
		exit(1)
	end

	Config.new() 
end

if command == "build"

	FileUtils.rm_r("build") if Dir.exists?("build")
	FileUtils.rm_r("temp") if Dir.exists?("temp")
	FileUtils.mkdir("temp")
	FileUtils.cp_r("#{config.data_path}/common/Frameworks", "temp")
	FileUtils.cp_r("Resources", "temp") if Dir.exists?("Resources")
	Dir["./**/*.j"].each {|file| FileUtils.cp(file, "temp")}
	Dir["#{config.data_path}/common/*"].select{|x|File.file? x}.each do |file|
		filename = File.basename(file, ".erb")
		file_content = config.get_file(filename)[:string]
		File.write("temp/#{filename}", file_content)
	end
	IO.popen('cd temp && jake deploy') do |io|
		while (line = io.gets) do
			puts line
		end
	end
	FileUtils.mv("temp/Build/Deployment/#{config.bundle_name}", "build")
	
elsif command == "create"

	folder = ARGV.shift
	if folder
		FileUtils.cp_r "#{Gem.loaded_specs['chino'].full_gem_path}/data/chino/skeleton", folder
		FileUtils.mkdir "#{folder}/Resources"
	else
		puts "No folder specified"
	end

elsif command == "gen"
	class_type = ARGV.shift

	if File.exists?("#{config.data_path}/templates/#{class_type}.j.erb")
		cls_name = ARGV.shift.camelize
		renderer = ERB.new(File.read("#{config.data_path}/templates/#{class_type}.j.erb"))
		File.write("#{cls_name}.j", renderer.result(binding))
	else
		puts "Class type #{class_type} not supported"
		exit(1)
	end

else
	Website.setup(config)
	Website.run!
end
